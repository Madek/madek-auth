jobs:

  build:
    name: Build uberjar
    run_when: &DEFAULT_TRIGGERS
      any branch matches:
        type: branch
        include_match: ^.+$
    context:
      include: cider-ci/context-components/build.yml

  lint:
    name: "Linting"
    description: |
      Code checks: static checks and metrics: complexity, duplication, and format,
      also other consistency checks.
    priority: 3
    run_when: *DEFAULT_TRIGGERS
    context:
      task_defaults:
        include: [cider-ci/task-components/env.yml]
      contexts:
        include:
          - path: cider-ci/context-components/lint/git-lint.yml
            submodule: [datalayer]
        cljc-lint:
          tasks:
            cljc-lint:
              scripts:
                test:
                  body: |
                    #!/usr/bin/env bash
                    set -euo pipefail
                    ./bin/cljfmt-check

  check-feature-tasks:
    name: Check if feature tasks are up to date
    run_when: *DEFAULT_TRIGGERS
    context:
      include: cider-ci/context-components/check-feature-tasks.yml


  specs-preflight-check:
    name: Feature Specs Preflight Check
    depends_on: &PREFLIGHT_DEPS
      build passed: &BUILD
        type: job
        job_key: build
        states: [passed]
    run_when: *PREFLIGHT_DEPS
    description: |
      This jobs checks with a dummy execution if all scripts are working
      together.
    context:
      include:
        - cider-ci/context-components/test-base.yml
      tasks:
        dummy:
          scripts:
            test:
              body: "echo '✔︎ just a no-op dummy' ; exit 0"

  basic-features:
    name: Basic features
    depends_on: &BASIC_DEPS
      preflight passed: &PREFLIGHT
        type: job
        job_key: specs-preflight-check
        states: [passed]
      check feature tasks: &FEATURE_TASKS
        type: job
        job_key: check-feature-tasks
        states: [passed]
      lint: &LINT
        type: job
        job_key: lint
        states: [passed]
    run_when: *BASIC_DEPS
    description: |
      Some basice features.
      any branch matches:
        type: branch
        include_match: ^.+$
    context:
      include:
        - cider-ci/context-components/basic-features.yml

  extauth-features:
    depends_on: &EXTAUTH_DEPS
      basic passed: &BASIC
        type: job
        job_key: basic-features
        states: [passed]
    run_when: *EXTAUTH_DEPS
    name: External authentication features
    description: |
      External authentication features.
    context:
      include:
        - cider-ci/context-components/extauth-features.yml

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# META JOBS (only depend on other jobs)                                           #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  all-tests:
    name: "All tests"
    description: |
      This job depends on all unit jobs that need to pass.
      It is depended upon by the super-project!
      *Note that there still be more requirements for actually pushing to `origin`,
      look in job **"Good to Merge"**!*
    priority: 999 # "empty" job = high priority
    context:
      task: "echo '✔︎ All dependencies have passed' ; exit 0"
    depends_on: &ALL_TEST_DEPENDS
      build: {job_key: build, type: job, states: [passed]}
      lint: {job_key: lint, type: job, states: [passed]}
      check-feature-tasks: {job_key: check-feature-tasks, type: job, states: [passed]}
      specs-preflight-check: {job_key: specs-preflight-check, type: job, states: [passed]}
      basic-features: {job_key: basic-features, type: job, states: [passed]}
      extauth-features: {job_key: extauth-features, type: job, states: [passed]}
      all-tests of the datalayer: {job_key: all-tests, type: job, submodule: [datalayer], states: [passed]}
    run_when: *ALL_TEST_DEPENDS

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# GITHUB BRANCH PROTECTION                                                        #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  good-to-merge:
    name: "⚑ Good To Merge"
    description: |
      This job depends on all jobs that need to pass for "Delivery".
      It is depended upon by GitHub's branch protection (for `master`)!
    priority: 999 # "delivery" job = high priority
    context:
      include:
        - path: cider-ci/context-components/env.yml
        - submodule: [datalayer]
          path: cider-ci/context-components/merge-checks.yml
    depends_on: &GOOD_TO_MERGE_DEPS
      all-tests: {job_key: all-tests, type: job, states: [passed]}
      good to merge of the datalayer: {job_key: merged-to-master, type: job, submodule: [datalayer], states: [passed]}
    run_when: *GOOD_TO_MERGE_DEPS

  merged-to-master:
    name: "Merged to master"
    depends_on:
      master branch matches:
        type: branch
        include_match: ^master$
    run_when:
      master branch matches:
        type: branch
        include_match: ^master$
    context:
      tasks:
        merged-to-master:
          scripts:
            test:
              body: "exit 0"
